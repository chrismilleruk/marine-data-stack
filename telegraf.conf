# Global telegraf configuration
[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "30s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

# Input plugin to collect SignalK data via its HTTP API
[[inputs.http]]
  name_override = "signalk"
  urls = ["http://signalk:3000/signalk/v1/api/vessels/self"]
  method = "GET"
  data_format = "json_v2"
  
  [[inputs.http.json_v2]]
    measurement_name = "marine_data"
    timestamp_path = "timestamp"
    timestamp_format = "2006-01-02T15:04:05.999Z"
    
    [[inputs.http.json_v2.object]]
      path = "navigation"
      tags = ["position_source"]
      
      # Define specific fields from the SignalK data
      [inputs.http.json_v2.object.fields]
        "position.latitude" = "float"
        "position.longitude" = "float"
        "speedOverGround" = "float"
        "courseOverGroundTrue" = "float"
        "courseOverGroundMagnetic" = "float"
        "headingTrue" = "float"
        "headingMagnetic" = "float"
        "magneticVariation" = "float"

    [[inputs.http.json_v2.object]]
      path = "environment"
      
      # Define environmental sensors data fields
      [inputs.http.json_v2.object.fields]
        "depth.belowTransducer" = "float"
        "wind.speedApparent" = "float"
        "wind.angleApparent" = "float"
        "wind.speedTrue" = "float"
        "wind.angleTrueGround" = "float"
        "water.temperature" = "float"

# Input plugin - read from your local InfluxDB for cloud sync
[[inputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "${INFLUX_TOKEN}"
  organization = "marine"
  bucket = "signalk"
  
  # Filter which data to replicate
  namepass = ["marine_data", "nmea_*"]
  
  # Time range for initial backfill, then continuously collects newer data
  range_start = "-1h"
  range_stop = "now()"

# Store data in local InfluxDB
[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "${INFLUX_TOKEN}"
  organization = "marine"
  bucket = "signalk"
  timeout = "5s"

# OPTIONAL: Sync to InfluxDB Cloud (uncomment and configure this section when needed)
# [[outputs.influxdb_v2]]
#   urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]  # Replace with your cloud region
#   token = "${CLOUD_INFLUXDB_TOKEN}"
#   organization = "your-cloud-org"
#   bucket = "your-cloud-bucket"
#   timeout = "10s"

# OPTIONAL: Downsampling processor for cloud data
# [[processors.aggregate]]
#   period = "5m"
#   
#   [[processors.aggregate.aggregator]]
#     measurement = "marine_data"
#     fields = ["*"]
#     drop_original = true
#     
#     [processors.aggregate.aggregator.functions]
#       mean = ["*"]
#       min = ["depth.belowTransducer", "water.temperature"]
#       max = ["speedOverGround", "wind.speedApparent"]
