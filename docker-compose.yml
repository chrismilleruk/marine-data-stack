# Marine Data Stack for Balena Devices
# This docker-compose stack runs on a Raspberry Pi 4 (or similar) managed by Balena
# It collects marine/boat data locally and syncs to InfluxDB Cloud
#
# Services:
# - SignalK: Marine data server collecting NMEA data
# - InfluxDB: Local time-series database for data storage
# - Grafana: Local visualization dashboard
# - AVNav: Marine navigation software
# - Telegraf: Receives data from SignalK and forwards to InfluxDB Cloud
# - Browser: Kiosk browser for displaying dashboards
#
# Environment variables are managed through Balena device/fleet variables
# Data flow: NMEA devices -> SignalK -> Local InfluxDB (for local storage)
#                                    -> Telegraf -> Cloud InfluxDB (for cloud sync)

version: '2'

services:
  signalk:
    image: signalk/signalk-server:latest
    container_name: signalk
    privileged: true # required for UDEV to find plugged in peripherals such as a USB mouse
    ports:
      - "3000:3000"      # Web interface (external)
      - "8375"      # NMEA 0183 TCP input
      - "10110:10110"    # NMEA 0183 TCP output
      - "8443:8443"      # HTTPS
    volumes:
      - signalk-config:/home/node/.signalk  # Settings persistence
      - signalk-logs:/home/node/.signalk/logs  # Map logs directory to host
    environment:
      - NMEA0183PORT=10110
      - SIGNALK_NODE_VERSION=latest
    restart: unless-stopped
    labels:
      io.balena.features.supervisor-api: '1'

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086"      # InfluxDB UI and API (internal only)
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    environment:
      # - DOCKER_INFLUXDB_INIT_MODE=setup
      # - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-admin}
      # - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-Strong_p@ssword}
      # - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-marine}
      # - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-signalk}
      # - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_REPORTING_DISABLED=true
    restart: unless-stopped
    labels:
      io.balena.features.supervisor-api: '1'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "8000"      # Grafana UI (internal only)
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      # - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      # - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel
      # - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL:-/grafana/}
      # - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_HTTP_PORT=8000
    depends_on:
      - influxdb
    restart: unless-stopped
    labels:
      io.balena.features.supervisor-api: '1'

  avnav:
    build:
      context: ./avnav
    container_name: avnav
    ports:
      - "8080:8080"      # AVNav web interface (external)
      - "8081"      # NMEA over TCP (input) 
      - "8082"      # NMEA over TCP (output)
    volumes:
      - avnav-home:/home/avnav/avnav  # AVNav user settings
      - avnav-charts:/home/avnav/charts  # For charts
    environment:
      - TZ=UTC
    restart: unless-stopped
    privileged: true     # This can help with permission issues in Balena
    depends_on:
      - signalk
    labels:
      io.balena.features.supervisor-api: '1'

  telegraf:
    build:
      context: ./telegraf
      dockerfile: Dockerfile
    container_name: telegraf
    ports:
      - "8186"      # InfluxDB listener for SignalK data (internal only)
    # environment:
      # # Local InfluxDB settings
      # - LOCAL_INFLUX_TOKEN=${LOCAL_INFLUX_TOKEN}
      # - LOCAL_INFLUX_ORG=${LOCAL_INFLUX_ORG:-marine}
      # - LOCAL_INFLUX_BUCKET=${LOCAL_INFLUX_BUCKET:-signalk}
      # # Cloud InfluxDB settings
      # - CLOUD_INFLUX_URL=${CLOUD_INFLUX_URL}
      # - CLOUD_INFLUX_TOKEN=${CLOUD_INFLUX_TOKEN}
      # - CLOUD_INFLUX_ORG=${CLOUD_INFLUX_ORG}
      # - CLOUD_INFLUX_BUCKET=${CLOUD_INFLUX_BUCKET}
      # # Device name from Balena
      # - BALENA_DEVICE_NAME_AT_INIT=${BALENA_DEVICE_NAME_AT_INIT:-marine-device}
    depends_on:
      - influxdb
    restart: unless-stopped
    labels:
      io.balena.features.supervisor-api: '1'

  browser:
    build:
      context: ./browser
    # image: bh.cr/g_lucas_houssa/browser
    # image: bh.cr/balenalabs/browser-aarch64 # where <arch> is one of aarch64, arm32 or amd64
    privileged: true # required for UDEV to find plugged in peripherals such as a USB mouse
    ports:
        - '5011' # management API (optional)
        - '35173' # Chromium debugging port (optional)
    volumes:
      - 'browser-settings:/data' # Only required if using PERSISTENT flag (see below)
    devices:
      - /dev/bus/usb:/dev/bus/usb  # USB devices access
      - /dev/input:/dev/input      # Input devices access
    environment:
      - UDEV=on  # Enable udev for device detection
      - DISPLAY_NUM=0  # Display number
    labels:
      io.balena.features.kernel-modules: '1'  # Access to kernel modules
      io.balena.features.firmware: '1'        # Access to firmware

volumes:
  signalk-config:
  signalk-logs:
  influxdb-data:
  influxdb-config:
  grafana-data:
  avnav-home:
  avnav-charts:
  browser-settings:
