# Telegraf configuration for one-time historic data migration
# Run with: docker run --rm -v $(pwd)/telegraf/migrate-historic-data.conf:/etc/telegraf/telegraf.conf:ro --env-file .env telegraf

# Global Agent Configuration
[agent]
  ## Run once and exit
  once = true
  
  ## Disable internal metrics collection
  collection_jitter = "0s"
  flush_jitter = "0s"
  precision = "s"
  
  ## Smaller buffer for rate-limited migration
  metric_buffer_limit = 10000
  
  ## Override default hostname
  hostname = "${BALENA_DEVICE_NAME_AT_INIT}"
  
  ## Rate limiting for free tier
  ## Process in smaller batches to stay under 5MB/5min limit
  metric_batch_size = 500
  
  ## Add delay between batches (1 second between flushes)
  flush_interval = "1s"

# Output to Cloud InfluxDB
[[outputs.influxdb_v2]]
  urls = ["${CLOUD_INFLUX_URL}"]
  token = "${CLOUD_INFLUX_TOKEN}"
  organization = "${CLOUD_INFLUX_ORG}"
  bucket = "${CLOUD_INFLUX_BUCKET}"
  
  ## Increase timeout for large batches
  timeout = "60s"
  
  ## Smaller batch size for free tier (stay well under 5MB/5min)
  ## 500 metrics * ~1KB each = ~500KB per batch
  metric_batch_size = 500

# Input from Local InfluxDB - ALL HISTORIC DATA
[[inputs.influxdb_v2]]
  ## Local InfluxDB endpoint
  urls = ["http://influxdb:8086"]
  
  ## Authentication
  token = "${LOCAL_INFLUX_TOKEN}"
  organization = "${LOCAL_INFLUX_ORG}"
  bucket = "${LOCAL_INFLUX_BUCKET}"
  
  ## Query smaller time ranges to avoid overwhelming the free tier
  ## Process 1 day at a time, starting from oldest data
  query = '''
    from(bucket: v.bucket)
      |> range(start: -30d, stop: -29d)
      |> filter(fn: (r) => r._measurement != "telegraf")
  '''
  
  ## Keep original measurement names
  measurement_name = ""
  
  ## Run only once
  interval = "1s"
  
  ## Longer timeout for large queries
  timeout = "5m" 